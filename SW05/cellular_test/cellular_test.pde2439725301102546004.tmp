int squareSize = 4;
int[] arrActualState;
int[] arrOldUnchangedArray;
int gridPosition =0;

int[] arrRuleset={0, 0, 1, 1, 0, 1, 1, 0}; //Rule 54
int counter=0;

void setup() {
  size(600, 600);
  background(255);
  arrActualState = new int[width/squareSize];
  arrOldUnchangedArray = new int[width/squareSize];
  setupFirstArray();
  arrayCopy(arrActualState, arrOldUnchangedArray);
}



void draw() {
  drawRectangle();
}


void drawRectangle() {
  if (counter <= height) {
    drawSquares();
    arrayCopy(arrActualState, arrOldUnchangedArray);
  }
}

void defineNextGeneration() {
  for(int i = 0; i < arrOldUnchangedArray.length; i++) {
    if(i==0) {
      println("hi");
    } else if(i==arrOldUnchangedArray.length-1) {
      println("hihi");
    } else {
            
    }
  } 
}


void drawSquares() {
  for (int i = 0; i < arrActualState.length; i++) {
    if (arrActualState[i] == 1) {
      fill(255);
    } else {
      fill(0);
    }
    rect(i*squareSize, 0, squareSize, squareSize);
    defineNextGeneration();
  }
}


void setupFirstArray() {
  //init everything with zeros
  for (int i  =0; i <arrActualState.length; i++) {
    arrActualState[i] = 0;
  }
  //init the middle cell with a 1.
  arrActualState[arrActualState.length/2] =1;
}